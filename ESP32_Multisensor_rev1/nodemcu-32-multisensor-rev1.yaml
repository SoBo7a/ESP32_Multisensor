esphome:
  name: "nmcu32-multisensor-rev1-01-wz"
  friendly_name: "ESP32 Multisensor - rev1 - 01 Wohnzimmer"

#-------------------------------------------------------------------------------
# ESP32 board and framework (Arduino)
#-------------------------------------------------------------------------------
esp32:
  board: esp32dev
  framework:
    type: arduino

#-------------------------------------------------------------------------------
# Logger (set baud_rate to 0 to disable hardware UART)
#-------------------------------------------------------------------------------
logger:
  baud_rate: 0
  level: WARN  # Options: DEBUG, INFO, WARN, ERROR

#-------------------------------------------------------------------------------
# API configuration for Home Assistant integration
#-------------------------------------------------------------------------------
api:
  # Optionally, you can add encryption for secure communication
  # encryption:
  #   key: "your_encryption_key_here"

#-------------------------------------------------------------------------------
# OTA (Over The Air) updates configuration
#-------------------------------------------------------------------------------
ota:
  - platform: esphome
    password: !secret ota_password

#-------------------------------------------------------------------------------
# WiFi configuration
#-------------------------------------------------------------------------------
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: LIGHT
  fast_connect: true  # Connect quicker if using a known SSID
  reboot_timeout: 15min  # Reboot the device after 15 minutes without WiFi

  # Fallback access point in case WiFi connection fails
  # ap:
    # ssid: "Nodemcu-32-Multisensor-01"
    # password: "fallback_password_here"

#-------------------------------------------------------------------------------
# Bluetooth configuration
#-------------------------------------------------------------------------------
esp32_ble_tracker:

  id: "ble_presence_tracker"

  scan_parameters: 
    interval: 320ms
    window: 250ms
    duration: 10s
    active: False

#-------------------------------------------------------------------------------
# Web server to access sensor data via a browser
#-------------------------------------------------------------------------------
captive_portal:

web_server:
  port: 80
  version: 3
  include_internal: true

  ota: True
  auth:
    username: "admin"
    password: !secret web_server_password

#-------------------------------------------------------------------------------
# I2C configuration for devices like TSL2591 (light sensor)
#-------------------------------------------------------------------------------
i2c:
  - id: light_sensor_i2c
    sda: 21  # I2C data line on GPIO21
    scl: 22  # I2C clock line on GPIO22
    scan: True  # Automatically scan for I2C devices

#-------------------------------------------------------------------------------
# Output: Grove Buzzer control using GPIO13 (LEDC PWM output)
#-------------------------------------------------------------------------------
output:
  - platform: ledc
    pin: GPIO13
    id: "buzzer_pwm"

#-------------------------------------------------------------------------------
# Switch: Control the Grove Buzzer via Home Assistant
#-------------------------------------------------------------------------------
switch:
  - platform: output
    name: "Grove Buzzer"
    output: "buzzer_pwm"

#-------------------------------------------------------------------------------
# Buttons for safe mode, restart, and shutdown of the ESP32
#-------------------------------------------------------------------------------
button:
  - platform: restart
    name: "Restart"
    entity_category: "config"

  - platform: safe_mode
    name: "Restart (Safe Mode)"
    entity_category: "config"

  - platform: shutdown
    name: "Shutdown"
    entity_category: "config"  

#-------------------------------------------------------------------------------
# Sensors configuration
#-------------------------------------------------------------------------------
sensor:
  #-------------------------------------------------------------------------
  # Free Memory sensor
  #-------------------------------------------------------------------------
  - platform: template
    name: "Free Memory"
    id: free_memory
    lambda: |-
      return (float) ESP.getFreeHeap() / 1024.0;
    unit_of_measurement: "KB"
    accuracy_decimals: 2
    update_interval: 3600s
    device_class: data_size
    entity_category: "diagnostic"

  #-------------------------------------------------------------------------
  # CPU Frequenzy sensor
  #-------------------------------------------------------------------------
  - platform: template
    name: "CPU Frequency"
    id: cpu_frequency
    lambda: |-
      return (float) ESP.getCpuFreqMHz();
    unit_of_measurement: "MHz"
    update_interval: 3600s
    entity_category: "diagnostic"
    device_class: data_rate

  #-------------------------------------------------------------------------
  # System uptime (time since boot)
  #-------------------------------------------------------------------------
  - platform: uptime
    type: seconds
    name: "System Uptime"
    entity_category: "diagnostic"
    update_interval: 60s
    device_class: duration

  #-------------------------------------------------------------------------
  # Internal temperature sensor (from the ESP32)
  #-------------------------------------------------------------------------
  - platform: internal_temperature
    name: "ESP32 Internal Temperature"
    device_class: temperature
    unit_of_measurement: "°C"
    filters:
      - delta: 0.5
    update_interval: 30s
    entity_category: "diagnostic"

  #-------------------------------------------------------------------------
  # WiFi signal strength sensor (dB and percentage)
  #-------------------------------------------------------------------------
  - platform: wifi_signal
    name: "WiFi Signal Strength"
    id: wifi_signal_db
    update_interval: 300s
    entity_category: "diagnostic"
    device_class: signal_strength

  # Convert WiFi signal to percentage
  - platform: copy
    source_id: wifi_signal_db
    name: "WiFi Signal Strength (%)"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: signal_strength

  #-------------------------------------------------------------------------
  # DHT22 sensor (temperature and humidity)
  #-------------------------------------------------------------------------
  - platform: dht
    model: DHT22_TYPE2
    pin: GPIO4
    temperature: 
      name: "Ambient Temperature"
      id: air_temperature
      unit_of_measurement: "°C"
      device_class: temperature
      filters:
        - filter_out: nan  # Filter out invalid readings
        - delta: 0.2
        - offset: -4 # Temperature offset due to enclosed case
    humidity: 
      name: "Ambient Humidity"
      id: relative_humidity
      device_class: humidity
      filters:
        - filter_out: nan
        - delta: 0.2
        - offset: 10
    update_interval: 60s

  # Calculate absolute humidity based on DHT22 sensor data
  - platform: absolute_humidity
    name: "Absolute Humidity"
    temperature: air_temperature
    humidity: relative_humidity
    device_class: humidity

  #-------------------------------------------------------------------------
  # TSL2591 light sensor (I2C)
  #-------------------------------------------------------------------------
  - platform: tsl2591
    i2c_id: light_sensor_i2c
    name: "Ambient Light Sensor"
    id: "light_sensor"
    address: 0x29
    integration_time: 600ms
    update_interval: 5s
    gain: auto
    device_factor: 53
    glass_attenuation_factor: 200

    # Visible light sensor
    visible:
      name: "Visible Light"
      device_class: illuminance

    # Infrared light sensor
    infrared:
      name: "Infrared Light"
      device_class: illuminance

    # Full spectrum light sensor
    full_spectrum:
      name: "Full Spectrum Light"
      device_class: illuminance

    # Calculated lux value (with filters)
    calculated_lux:
      name: "Calculated Lux"
      device_class: illuminance
      accuracy_decimals: 0
      filters: 
        # - lambda: |-
        #     float MIN = 0.0;
        #     if (x >= MIN) return x * 2; 
        #     else return {};
        - delta: 10.0  # Only send updates if the value changes significantly

#-------------------------------------------------------------------------------
# Binary sensors configuration
#-------------------------------------------------------------------------------
binary_sensor:
  #-------------------------------------------------------------------------
  # BLE Presence detection
  #-------------------------------------------------------------------------
  - platform: ble_presence
    ibeacon_uuid: "c5d10150-ce12-4196-91bc-90e03c14a575"
    name: "Samsung S24 Plus - Wohnzimmer"
    timeout: 5s
    min_rssi: -93dB
    device_class: occupancy

  #-------------------------------------------------------------------------
  # SR-501 PIR motion sensor
  #-------------------------------------------------------------------------
  - platform: gpio
    pin: GPIO18
    name: "Motion Sensor"
    device_class: motion 

#-------------------------------------------------------------------------------
# Text sensors for additional information
#-------------------------------------------------------------------------------
text_sensor:
  #-------------------------------------------------------------------------
  # ESPHome firmware version information
  #-------------------------------------------------------------------------
  - platform: version
    name: "ESPHome Firmware Version"
    entity_category: "diagnostic"

  #-------------------------------------------------------------------------
  # WiFi information (IP address, SSID, MAC address, DNS)
  #-------------------------------------------------------------------------
  - platform: wifi_info
    ip_address:
      name: "IP Address"
      entity_category: "diagnostic"
    ssid:
      name: "Connected WiFi SSID"
      entity_category: "diagnostic"
    mac_address:
      name: "Mac Address"
      entity_category: "diagnostic"
    dns_address:
      name: "DNS Address"
      entity_category: "diagnostic"